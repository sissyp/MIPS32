#This program calculates the combinations function C(n,k)
#C(n,k)refers to the number of ways of selecting k objects from a set of n distinct objects.
#Each java instruction will be replaced with an assembly one.
#The results will be printed in our main function, which is named run.
#A subprogram named combinations is going to be used in order to help us calculate C(n,k).

	.text
	.globl run
	
#our main program named run 
	
run:
	la $a0, print_str1       #prints the string 
	li $v0, 4                #"Enter number of objects in the set (n): "   
	syscall                  #on screen
	
	li $v0, 5			     #reads the integer n
	syscall
	
	move $s0,$v0		     #copies the contents of v0 to s0
	
	la $a0, CRLF             #prints a new line on screen
	li $v0, 4
	syscall
	
	la $a0, print_str2       #prints the string 
	li $v0, 4                #"Enter number to be chosen (k): "  
	syscall				     #on screen
	
	li $v0, 5			     #reads the integer k
	syscall
	
	move $s1,$v0		     #copies the contents of v0 to s1
	
	la $a0, CRLF             #prints a new line on screen
	li $v0, 4
	syscall
	
	blt $v0, $v1, ELSE       #if none of the conditions is true we print a messsage
	blt $v1, $zero, ELSE
	la $a0, print_str3       #prints the string 
	li $v0, 4                #"C("   
	syscall                  #on screen
	
	move $a0, $s0            #prints the value of n
	li $v0,1
	syscall
	
	la $a0,print_str5        #prints the string
	li $v0,4                 #", "
    syscall                  #on screen
	
	move $a0, $s1            #prints the value of k	
	li $v0,1
	syscall
		
	la $a0,print_str6        #prints the string
	li $v0,4                 #") = "
    syscall                  #on screen
	
	jal combinations         #calls the subprogram in order to help us calculate C(n,k).
	move $a0,$v1             #copies the contents of v1 to a0
	li $v0,1				 #prints the final result
	syscall
	
	li $v0,10                #exits the program
	syscall
	
ELSE:
	la $a0, print_str4       #prints the string 
	li $v0, 4                #"Please enter n >= k >= 0"   
	syscall					 #on screen
	
#our subprogram named combinations 

combinations:

	li $t1, 1                #we load immediately const 1 in register t1, t1 is factorial_n
	li $t0, 1				 #we load immediately const 1 in register t0, t0 is i
	
first_loop: 
	bgt $t0,$s0,first_exit   #if i>n we exit the loop
	mul $t1, $t1, $t0        # factorial_n*=i
	addi $t0, $t0, 1         #i++
	j first_loop             
	
first_exit:
	li $t2, 1			     #we load immediately const 1 in register t2, t2 is factorial_k
	li $t0, 1                #the value of i should be 1 again
	
second_loop:
	bgt $t0,$s1,second_exit  #if i>k we exit the loop
	mul $t2, $t2, $t0        # factorial_k*=i
	addi $t0, $t0 ,1         #i++
	j second_loop
	
second_exit:
	li $t3, 1 	             #we load immediately const 1 in register t3, t3 is factorial_n_k
	li $t0,1				 #the value of i should be 1 again
	sub $s2,$s0,$s1          #n-k
	
third_loop:
	bgt $t0,$s2,third_exit	 #if i>n-k we exit the loop
	mul $t3,$t3,$t0          # factorial_n_k*=i
	addi $t0, $t0 ,1         #i++
	j third_loop
	
third_exit:
	mul $t4,$t2,$t3          #t4 contains the denominator
	div $v1,$t1,$t4          #v1 contains the final result
	j $ra
	
	.data
	print_str1: .asciiz "Enter number of objects in the set (n): "
	print_str2: .asciiz "Enter number to be chosen (k): "
	CRLF:       .asciiz "\n"
	print_str3: .asciiz "C("  
	print_str4: .asciiz "Please enter n >= k >= 0"
	print_str5: .asciiz ", "
	print_str6: .asciiz ") = "
